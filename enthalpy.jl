# Order of components: CH4, H2O, H2, CO, CO2, C2H6, C3H8, n-C4H10, i-C4H10, C5+
# Order of coefficients: A, B, C, H298, Cp298/R <- remember to multiply with 8.314
heavy_const = [1.702 9.081 -2.164 -74.520 4.217; 
                3.470 1.450 0.000 -241.818 4.038;
                3.249 0.422 0.000 0.000 3.468;
                3.376 0.557 0.000 -110.525 3.507;
                5.457 0.557 0.000 -393.509 4.467;
                1.131 19.225 -5.561 -83.820 6.369;
                1.213 28.785 -8.824 -104.680 9.011;
                1.935 36.915 -11.402 -125.790 11.298;
                1.935 36.915 -11.402 -125.790 11.298;
                2.464 45.351 -14.111 -146.760 14.731]


function build_enthalpy(model, T, par)
  return @NLexpression(model, [i = 1:10], (par.hconst[i,4] + (((par.hconst[i,1]*T + par.hconst[i,2]/2*T^2*10^(-3) + par.hconst[i,3]/3*T^3*10^(-6)) 
  - (par.hconst[i,1]*298 + par.hconst[i,2]/2*298^2*10^(-3) + par.hconst[i,3]/3*298^3*10^(-6)))*8.314/1000))*1000)
end

# H298, A, B, C, D, E, F, G, H
# order of compounds: CH4, H2O, H2, CO, CO2
# Temperature ranges for the constants:
# CH4 (298-1300), H2O (500-1700), H2 (298-1000), CO (298-1300), CO2 (298-1200)
#const light_const = [-74.87 -0.703029 108.4773 -42.52157 5.862788 0.678565 -76.84376 158.7163 -74.87310;
#                -241.83 30.09200 6.832514 6.793435 -2.534480 0.082139 -250.8810 223.3967 -241.8264;
#                0.0 33.066178 -11.363417 11.432816 -2.772874 -0.158558 -9.980797 172.707974 0.0;
#                -110.53 25.56759 6.096130 4.054656 -2.671301 0.131021 -118.0089 227.3665 -110.5271;
#                -393.52 24.99735 55.18696 -33.69137 7.948387 -0.136638 -403.6075 228.2431 -393.5224]


#function enthalpy(T_in, v = light_const)
#     T = T_in / 1000
#    h_vec = v[:,1] + v[:,2] * T + v[:,3] / 2 * T^2 + v[:,4] / 3 * T^3 +\
#            v[:,5] / 4 * T^4 - v[:,6] / T + v[:,7] - v[:,9]
#    #h_vec = enthalpy_heavy(heavy_const, T*1000)[:5]
#    return h_vec
#end

#function heavy_enthalpy(T, v=heavy_const)
#    h_vec = (v[:,4] + (((v[:,1]*T + v[:,2]/2*T^2*10^(-3) + v[:,3]/3*T^3*10^(-6)) 
#    - (v[:,1]*298 + v[:,2]/2*298^2*10^(-3) + v[:,3]/3*298^3*10^(-6)))*8.314 /1000))*1000
#
#    return h_vec
#end
#print(heavy_enthalpy(298))

#memoized_enthalpy = memoize(heavy_enthalpy, 10)